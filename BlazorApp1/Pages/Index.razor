@page "/"
@using Microsoft.JSInterop;
@inject IJSRuntime JSRuntime
@inject FusionChartsService fusionChartsService;
<PageTitle>Index</PageTitle>
<h2>1. LARGE DATA</h2>
<div>
    <div id="chartContainer1"></div>
</div>
<button @onclick="ChangeData">Change Data</button>
<p>Value: @value</p>
Welcome to your new app.
@code {


    [JSInvokable]
    public async Task ChangeData()
    {
        value += 1;
        StateHasChanged(); // Trigger UI update
        await fusionChartsService.CallFusionChartsFunction("setChartAttribute", "CHART_ID", "caption", "neww");
        Console.WriteLine("In HandleFusionCharts method");
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await fusionChartsService.activateLicense("LICENSE_KEY");
            await renderColumnCharts();
            await changeChartAttribute();
        }
        else
        {
        }
    }
    public int value = 0;

    //[JSInvokableAttribute("ChangeData")]
    

    [JSInvokable]
    private async Task CallChangeDataMethod()
    {
        await JSRuntime.InvokeVoidAsync("callChangeDataMethod");
    }

    // [JSInvokable("BlazorApp1.Pages.Index.HandleFusionChartsEvent")]
    //public static async void HandleFusionChartsEvent()
    //{
    // Your method logic
    //   Console.WriteLine("In HandleFusionCharts method");
    //await JSRuntime.InvokeVoidAsync("callBlazorMethod");
    // }
    private async Task renderColumnCharts()
    {
        dynamic myChartConfig = new System.Dynamic.ExpandoObject();
        dynamic myDataSource = new System.Dynamic.ExpandoObject();
        dynamic myChart = new System.Dynamic.ExpandoObject();
        dynamic myEvent = new System.Dynamic.ExpandoObject();
        myChartConfig.type = "column2D";
        myChartConfig.width = 1000;
        myChartConfig.height = 600;
        myChartConfig.dataFormat = "json";
        myChartConfig.renderAt = "chartContainer1";
        myChart.caption = "Monthly Sales";
        myChart.subCaption = "Last year";
        myChart.xAxisName = "Month";
        myChart.yAxisName = "Sales (in USD)";
        myChart.theme = "fusion";

        //myEvent.dataPlotClick = "function() { randomF() }";
        //var lDotNetReference = DotNetObjectReference.Create(this);
        
        myEvent.dataPlotClick = "function() { randomF();}";
      // myEvent.dataPlotClick = ChangeData();

        myDataSource.data = new[] {
            new { label = "X0", value = "380000" },
            new { label = "X1", value = "340000" },
            new { label = "X2", value = "740000" },
            new { label = "X3", value = "800000" },
            new { label = "X4", value = "400000" },
    };
        myDataSource.chart = myChart;
        myChartConfig.dataSource = myDataSource;
        myChartConfig.id = "CHART_ID";
        myChartConfig.events = myEvent;

        String chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);
        /* ------------------------ LISTENERS -------------------------
        myChartConfig.type = "column3D";
        myChartConfig.renderAt = "chartContainer2";
        myChartConfig.id = "CHART_ID";
        chartConfig = System.Text.Json.JsonSerializer.Serialize(myChartConfig);
        await fusionChartsService.renderChart(chartConfig);*/
    }
    private async Task changeChartAttribute()
    {
        dynamic myEvent = "function() { console.log('dataPlotClick')}";
        //await fusionChartsService.CallFusionChartsFunction("setChartAttribute", "CHART_ID", "caption", "new caption");
        await fusionChartsService.CallFusionChartsFunction("setChartAttribute", "CHART_ID", "caption", "newcaption");
    }
}
<SurveyPrompt Title="How is Blazor working for you?" />
